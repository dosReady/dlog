{"version":3,"sources":["org/dlog/comn/LoginComp.tsx","org/dlog/view/LoginView.tsx","resources/img/do.svg"],"names":["LoginTitleDiv","styled","div","LoginWrapDiv","LoginComp","inject","observer","value","undefined","length","user","toast","error","this","isEmpty","LoginID","Password","event","keyCode","appStore","props","toJS","getUser","isValidated","LoginSrvc","login","setLoginID","target","setPwd","onKeyDown","type","placeholder","onChange","onChangeID","onChangePWD","onClick","onLoginBtnClick","React","Component","autobind","withRouter","LoginViewConatiner","LoginView","src","Logo","className","module","exports"],"mappings":"khDAUA,IAAMA,EAAgBC,IAAOC,IAAV,KAkBbC,EAAeF,IAAOC,IAAV,KAqCZE,EAFLC,YAAO,W,GACPC,a,wKAKWC,GACJ,YAAaC,IAAVD,IACU,OAAVA,IACiB,IAAjBA,EAAME,QACI,MAAVF,M,kCAMaG,GAChB,YAAYF,IAATE,GACCC,IAAMC,MAAM,qHACL,GAGRC,KAAKC,QAAQJ,EAAKK,UACjBJ,IAAMC,MAAM,yGACL,IAGRC,KAAKC,QAAQJ,EAAKM,YACjBL,IAAMC,MAAM,4FACL,K,gCAQLK,GACN,GAAqB,KAAlBA,EAAMC,QAAgB,CAAC,IACfC,EAAYN,KAAKO,MAAjBD,SACDT,EAAOW,eAAI,OAACF,QAAD,IAACA,OAAD,EAACA,EAAUG,WAEzBT,KAAKU,YAAYb,IAChBc,IAAUC,MAAMN,EAAUG,c,sCAKdL,GAA+D,IAC5EE,EAAYN,KAAKO,MAAjBD,SACDT,EAAOW,eAAI,OAACF,QAAD,IAACA,OAAD,EAACA,EAAUG,WAEzBT,KAAKU,YAAYb,IAChBc,IAAUC,MAAMN,EAAUG,a,iCAKfL,GAAmD,IAC3DE,EAAYN,KAAKO,MAAjBD,SACC,OAARA,QAAQ,IAARA,KAAUO,WAAWT,EAAMU,OAAOpB,S,kCAIlBU,GAAmD,IAC5DE,EAAYN,KAAKO,MAAjBD,SACC,OAARA,QAAQ,IAARA,KAAUS,OAAOX,EAAMU,OAAOpB,S,+BAI9B,OACI,oCACI,kBAACP,EAAD,KACI,oDACA,6BACI,mDACA,gHACA,qSAGR,kBAACG,EAAD,CAAc0B,UAAWhB,KAAKgB,WAC1B,uDACA,2BAAOC,KAAK,OAAOC,YAAY,wBAASC,SAAUnB,KAAKoB,aACvD,0DACA,2BAAOH,KAAK,WAAWC,YAAY,2BAAOC,SAAUnB,KAAKqB,cACzD,4BAAQC,QAAStB,KAAKuB,iBAAtB,4B,GAnFIC,IAAMC,W,qCAkCzBC,K,iHAWAA,K,kHAUAA,K,8GAMAA,K,qFA6BWC,cAAWpC,G,8hBCrJ3B,IAAMqC,EAAqBxC,IAAOC,IAAV,KAwBlBwC,E,uKAEE,OACI,kBAACD,EAAD,KACI,kBAAC,IAAD,CAAUE,IAAKC,IAAMC,UAAU,SAC/B,kBAAC,EAAD,W,GALQR,IAAMC,WAWfI,a,mBCzCfI,EAAOC,QAAU,IAA0B","file":"static/js/11.f2773cd2.chunk.js","sourcesContent":["import { AppStore, User } from '@types';\nimport autobind from 'autobind-decorator';\nimport { toJS } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport LoginSrvc from 'org/dlog/comn/LoginSrvc';\nimport React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport styled from 'styled-components';\n\nconst LoginTitleDiv = styled.div`\n    span {\n        font-size: 30px;\n        font-weight: 700;\n        display: block;\n        margin-bottom: 8px;\n    }\n\n    div {\n        background-color: rgb(248,249,250);\n        margin-bottom: 8px;\n        padding: 8px 12px;\n        border-left: 5px solid #2A3D4E;\n        line-height: 1.25;\n    }\n    margin-bottom: 20px;\n`;\n\nconst LoginWrapDiv = styled.div`\n    span {\n        display: block;\n        font-size: 15px;\n        margin-bottom: 4px;\n    }\n    input {\n        :focus {\n            border: 0.0625rem solid #2A3D4E;\n            box-shadow: inset 0 0 0 0.0625rem #2A3D4E;\n        }\n        width: 100%;\n        padding: 8px 12px;\n        background-color: #FBFBFD;\n        border: 1px solid #D7E2EB;\n        border-radius: 0.25rem;\n        transition-duration: 0.08s;\n        transition-property: all;\n        transition-timing-function: ease-in-out;\n        transition-delay: initial;\n        font-size: 16px;\n        margin-bottom: 8px;\n    }\n\n    button {\n        width: 100%;\n        background-color: #2A3D4E;\n        height:35px;\n        font-size: 18px;\n        :hover \n            background-color : #476886;\n        }\n    }\n`;\n\n@inject('appStore') \n@observer\nclass LoginComp extends React.Component<RouteComponentProps & {appStore?:AppStore}, {}> {\n    // PART 1 변수\n    // PART 2 사용자함수\n    \n    isEmpty(value:string):boolean {\n        if(value === undefined) return true\n        if(value === null) return true\n        if(value.length === 0) return true\n        if(value === \" \") return true\n        \n        return false\n    }\n    \n    \n    private isValidated(user:User|undefined): boolean {\n        if(user === undefined) {\n            toast.error(\"사용자 아이디와 비밀번호를 입력하십시오.\");\n            return false;\n        }\n        \n        if(this.isEmpty(user.LoginID)) {\n            toast.error(\"사용자 아이디는 반드시 입력하십시오.\");\n            return false;\n        }\n        \n        if(this.isEmpty(user.Password)) {\n            toast.error(\"비밀번호는 반드시 입력하십시오.\");\n            return false;\n        }\n        \n        return true\n    }\n    \n    // PART 3 이벤트 함수\n    @autobind\n    onKeyDown(event: React.KeyboardEvent<HTMLDivElement>):void {\n        if(event.keyCode === 13) {\n            const {appStore} = this.props;\n            const user = toJS(appStore?.getUser())\n        \n            if(this.isValidated(user)) {\n                LoginSrvc.login(appStore!.getUser());\n            }\n        }\n    }\n    @autobind\n    private onLoginBtnClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n        const {appStore} = this.props;\n        const user = toJS(appStore?.getUser())\n        \n        if(this.isValidated(user)) {\n            LoginSrvc.login(appStore!.getUser());\n        }\n    }\n\n    @autobind\n    private onChangeID(event: React.ChangeEvent<HTMLInputElement>): void {\n        const {appStore} = this.props;\n        appStore?.setLoginID(event.target.value);\n    }\n    \n    @autobind\n    private onChangePWD(event: React.ChangeEvent<HTMLInputElement>): void {\n        const {appStore} = this.props;\n        appStore?.setPwd(event.target.value);\n    } \n\n    public render():JSX.Element {\n        return (\n            <>\n                <LoginTitleDiv>\n                    <span>로그인</span>\n                    <div>\n                        <p>* 안내문</p>\n                        <p>관리자전용 로그인 기능입니다.</p>\n                        <p>추후 신규 기능을 구현하게 되면 관리자가 초대한 사용자만 로그인 기능을 사용할 수 있을 예정입니다.</p>   \n                    </div>\n                </LoginTitleDiv>\n                <LoginWrapDiv onKeyDown={this.onKeyDown}>\n                    <span>사용자 ID</span>\n                    <input type=\"text\" placeholder=\"사용자 ID\" onChange={this.onChangeID} />\n                    <span>비밀번호</span>\n                    <input type=\"password\" placeholder=\"비밀번호\" onChange={this.onChangePWD}/>\n                    <button onClick={this.onLoginBtnClick}>로그인</button>\n                </LoginWrapDiv>\n            </>\n        )\n    }\n}\n\n export default withRouter(LoginComp);","import React from 'react';\nimport { ReactSVG } from 'react-svg';\nimport Logo from 'resources/img/do.svg';\nimport styled from 'styled-components';\nimport LoginComp from '../comn/LoginComp';\n\nconst LoginViewConatiner = styled.div`\n    max-width: 400px;\n    margin: 100px auto;\n\n    .logo {\n        width: 100%;\n        background-color: #2A3D4E;\n        padding: 10px 0;\n        margin-bottom: 20px;\n        div {\n            width: 150px;\n            margin: 0 auto;\n            svg {\n                background-color: #2A3D4E;\n                border-radius: 5px;\n                path {\n                    fill: white;\n                }    \n            }\n        }\n       \n    }\n`;\n\nclass LoginView extends React.Component<{}, {}> {\n    render(): JSX.Element {\n        return (\n            <LoginViewConatiner>\n                <ReactSVG src={Logo} className=\"logo\" />\n                <LoginComp/>\n            </LoginViewConatiner>\n        )\n    }\n}\n\nexport default LoginView;","module.exports = __webpack_public_path__ + \"static/media/do.d412a098.svg\";"],"sourceRoot":""}