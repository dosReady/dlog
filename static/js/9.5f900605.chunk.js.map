{"version":3,"sources":["org/dlog/blog/BlogViewCmp.tsx","org/dlog/view/BlogDetailView.tsx","resources/img/do.svg","org/dlog/blog/BlogRepo.tsx"],"names":["ViewContainer","styled","div","TocContainer","TocDiv","TocWrap","BlogViewComp","viewerEl","React","createRef","tocEl","info","post","target","this","current","Viewer","el","initialValue","Content","markdown","children","headingArr","i","length","element","item","HTMLHeadingElement","nodeName","setAttribute","innerText","push","type","text","setState","headings","querySelector","classList","remove","e","scrollTop","srcElement","scrollingElement","nextProps","nextState","conEl","tocTarget","state","undefined","clearHeadingClass","head_text","getBoundingClientRect","top","add","window","addEventListener","onScroll","removeEventListener","nexContext","loadPost","scrollIntoView","behavior","block","headingComp","ref","map","data","key","id","className","toLowerCase","onClick","onFocusHeading","Component","autobind","BackgroundStyle","createGlobalStyle","HeaderTop","header","HeaderDiv","MainTitleWrap","HeaderButtonWrap","FooterWrap","footer","EditorWrap","BlogDetailView","inject","observer","postID","props","match","params","postid","BlogRepo","srchPost","delPost","history","replace","LoginSrvc","getLocalStorage","getInfo","src","Logo","onClickLogo","MainTitle","goEditPage","onClickDelete","tags","tag","TagName","withRouter","module","exports","param","sec","list","observable","PostID","SubTitle","CreatedAt","Date","UpdatedAt","action","computed"],"mappings":"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","file":"static/js/9.5f900605.chunk.js","sourcesContent":["import Viewer from '@toast-ui/editor/dist/toastui-editor-viewer';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport { PostDTO } from '@types';\nimport autobind from 'autobind-decorator';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst ViewContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    max-width: 900px;\n    margin: 0 auto;\n    font-size: 16px;\n    padding: 30px 20px;\n}\n`;\n\nconst TocContainer = styled.div`\n    position: relative; \n\n    @media screen and (max-width: 1330px) {\n        display: none;\n    }\n`\nconst TocDiv = styled.div`\n    position: absolute; \n    left: 100%; \n`\n\nconst TocWrap = styled.div`\n    width: 240px;\n    border-left: 4px solid #2A3D4E;\n    overflow-x: hidden;\n    overflow-y: auto;\n    margin-left:2rem;\n    .h1-heading, .h2-heading{\n        cursor:pointer;\n        color:rgb(134, 142, 150);\n        margin-bottom:10px;\n    }\n    .h1-heading {\n        margin-left: 10px;\n    }\n    .h2-heading {\n        margin-left: 30px;\n    }\n    .this {\n        color: black;\n        font-weight: 600;\n    }\n`\n\ninterface Props {\n    info:PostDTO\n}\ninterface State {\n    headings: {type:string, text:string}[], \n    scrollTop:number\n}\n\nclass BlogViewComp extends React.Component<Props,State> {\n    private viewerEl = React.createRef<HTMLDivElement>();\n    private tocEl = React.createRef<HTMLDivElement>(); // table of contenst\n\n    async loadPost(info:PostDTO): Promise<void> {\n        const {post} = info;\n        const target = this.viewerEl.current;\n        if(target !== null)  {\n            new Viewer({\n                el: target,\n                initialValue: post.Content\n            });\n\n            // viewer 아래 내용을 읽어온다.\n            const markdown = target.children[0];\n            const headingArr = [];\n            for(let i=0; i< markdown.children.length; i++) {\n                const element = markdown.children.item(i);\n                // 머리글 관련된 요소를 검색한다.\n                // id값을 생성하고 state에 배열값으로 저장한다.\n                if(element instanceof HTMLHeadingElement) {\n                    if(element.nodeName === \"H3\" || element.nodeName === \"H4\" \n                       || element.nodeName === \"H5\" || element.nodeName === \"H6\" ) continue;\n                    element.setAttribute(\"id\", element.innerText);\n                    headingArr.push({type: element.nodeName, text: element.innerText});\n                }\n            }\n\n            this.setState({\n                headings: headingArr\n            })\n\n            \n        }\n    }\n\n    clearHeadingClass(headings: {type:string, text:string}[]): void {\n        const tocEl = (this.tocEl.current as HTMLDivElement);\n        let target = null ;\n        for(let i=0; i< headings.length; i++) {\n            target = (tocEl?.querySelector(`#h${headings[i].text}`)  as HTMLDivElement);\n            if(target !== null) target.classList.remove(\"this\");\n        }\n    }\n\n    @autobind\n    onScroll(e:any):void {\n        const scrollTop = e.srcElement.scrollingElement.scrollTop;\n        this.setState({ scrollTop });\n    }\n\n    shouldComponentUpdate(nextProps: Readonly<Props>, nextState: Readonly<State>): boolean {\n        if(nextState.scrollTop >= 250) {\n            this.tocEl.current?.setAttribute(\"style\", \"position: fixed; top: 120px;\")\n        } else {\n            this.tocEl.current?.setAttribute(\"style\", \"\");\n        }\n\n\n        const conEl = (this.viewerEl.current?.children[0] as HTMLDivElement);\n        const tocEl = (this.tocEl.current as HTMLDivElement);\n        let target = null ;\n        let tocTarget = null;\n        const headings = this.state?.headings;\n        if(headings !== undefined) {\n            this.clearHeadingClass(headings);\n            for(let i = headings.length - 1; i >= 0; i--) {\n                const head_text = this.state.headings[i].text;\n                target = (conEl?.querySelector(`#${head_text}`)  as HTMLDivElement);\n                tocTarget = (tocEl?.querySelector(`#h${head_text}`)  as HTMLDivElement);\n                if(target === null || tocTarget === null) continue;\n                if(target.getBoundingClientRect().top <= 90) {\n                    tocTarget.classList.add(\"this\");\n                    break;\n                }\n                //console.log(`#${head_text} / ${target.getBoundingClientRect().height} : ${target.getBoundingClientRect().top} -> ${}`)\n            }\n        }\n        return true;\n    }\n\n    componentDidMount():void {\n        window.addEventListener('scroll', this.onScroll);\n    }\n\n    componentWillUnmount():void {\n        window.removeEventListener('scroll', this.onScroll);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps: Readonly<Props>, nexContext:any):void {\n        this.loadPost(nextProps.info);\n    }\n\n    @autobind\n    onFocusHeading(text: string): void {\n        const conEl = (this.viewerEl.current?.children[0] as HTMLDivElement);\n        const target = (conEl?.querySelector(`#${text}`)  as HTMLDivElement);\n        //window.scrollTo(0, target.offsetTop + target.offsetHeight + 300);\n        if(target !== null) target.scrollIntoView({behavior: 'smooth', block: 'start' });\n    }\n\n    render():JSX.Element {\n        let headingComp = null;\n        const headings = this.state?.headings;\n        if(headings !== undefined) {\n            headingComp = (\n                <TocContainer>\n                    <TocDiv>\n                        <TocWrap ref={this.tocEl}>\n                            {headings.map((data:{type:string, text:string}, i: any) => (\n                            <div key={i} id={`h${data.text}`} className={`${data.type.toLowerCase()}-heading`} onClick={() => this.onFocusHeading(data.text)}>{data.text}</div>\n                            ))}\n                        </TocWrap>\n                    </TocDiv>\n                </TocContainer>\n            );\n    \n        }\n\n        return (\n            <ViewContainer>\n                {headingComp}\n                <div ref={this.viewerEl}></div>\n            </ViewContainer>\n        )\n    }\n\n}\n\nexport default BlogViewComp;","import { PostDTO, Tag } from '@types';\nimport autobind from 'autobind-decorator';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { ReactSVG } from 'react-svg';\nimport Logo from 'resources/img/do.svg';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport BlogRepo from 'org/dlog/blog/BlogRepo';\nimport BlogViewComp from 'org/dlog/blog/BlogViewCmp';\nimport LoginSrvc from 'org/dlog/comn/LoginSrvc';\n\n\n\nconst BackgroundStyle = createGlobalStyle`\n  body {\n    background-color: #fff;\n  }\n`;\nconst HeaderTop = styled.header`\n    background-color: #2A3D4E;\n`;\n\nconst HeaderDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    max-width: 900px;\n    padding: 0 20px;\n    margin: 0 auto;\n    height: 250px;\n    ul {\n        color: white;\n        li {\n            :hover {\n                background-color: #456582;\n                box-shadow: 1px 1px 2px 0px #0c1217;\n            }\n            border-radius: 4px;\n            cursor:pointer;\n            margin-bottom: 4px;\n            padding:2px;\n        }\n    }\n`;\n\nconst MainTitleWrap = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n    .logo {\n        margin-right: 10px;\n        div{\n            cursor:pointer;\n            width: 40px;\n            height: 40px;\n            \n            svg {\n                background-color: #2A3D4E;\n                border-radius: 5px;\n                path {\n                    fill: white\n                }    \n            }\n        }\n    }\n    strong {\n        color: white;\n        font-size: 33px;\n        margin-right: 10px;\n    }\n\n    button:hover {\n        background-color: #456582;\n        box-shadow: 1px 1px 2px 0px #0c1217;\n    }\n`\n\nconst HeaderButtonWrap = styled.div`\n    @media screen and (max-width: 900px) {\n        display: none;\n    }\n`\n\nconst FooterWrap = styled.footer`\n    \n`\n\nconst EditorWrap = styled.div`\n    display:flex;\n    max-width: 900px;\n    margin: 40rem auto;\n    padding: 10px 20px;\n    background-color: #c0bfde;\n    .logo {\n        margin-right: 10px;\n        div{\n            cursor:pointer;\n            width: 60px;\n            height: 60px;\n            svg {\n                border-radius: 5px;\n                path {\n                    fill: white;\n                }    \n            }\n        }\n    }\n    strong {\n        color: white;\n        align-self: center;\n    }\n`\n\n\n@inject('appStore') \n@observer\nclass BlogDetailView extends React.Component<RouteComponentProps<{postid: string}>,{}> {\n    async loadPost(): Promise<void> {\n        const postID= this.props.match.params.postid;\n        await BlogRepo.srchPost(postID);\n    }\n\n    async delPost(): Promise<void> {\n        const postID= this.props.match.params.postid;\n        await BlogRepo.delPost(postID);\n\n        this.props.history.replace(\"/\");\n    }\n\n    @autobind\n    onClickLogo():void {\n        this.props.history.push(\"/\");\n    }\n\n    @autobind\n    goEditPage():void {\n        this.props.history.push(`/blog/write/${this.props.match.params.postid}`);\n    }\n\n    @autobind\n    onClickDelete(): void {\n        this.delPost();\n    }\n\n    public componentDidMount():void {\n        const user = LoginSrvc.getLocalStorage();\n        if(user === null) {\n            this.props.history.replace(\"/login\");\n        }\n\n        this.loadPost();\n    }\n\n    render():JSX.Element {\n        const info:PostDTO = BlogRepo.getInfo;\n        return (\n            <div>\n                <BackgroundStyle/>\n                <HeaderTop>\n                    <HeaderDiv>\n                        <MainTitleWrap>\n                            <ReactSVG src={Logo} className=\"logo\" onClick={this.onClickLogo}/>\n                            <strong>{info.post.MainTitle}</strong>\n                            <HeaderButtonWrap>\n                                <button onClick={this.goEditPage}>EDIT</button>\n                                <button onClick={this.onClickDelete}>DELETE</button>\n                            </HeaderButtonWrap>\n                            \n                        </MainTitleWrap>\n                        <ul>\n                            {info.tags.map(\n                                (tag:Tag, i:any) => (\n                                <li key={i}># {tag.TagName}</li>\n                            ))}\n                        </ul>\n                    </HeaderDiv>\n                </HeaderTop>\n                <BlogViewComp info={info}/>\n                <FooterWrap>\n                    <EditorWrap>\n                        <ReactSVG src={Logo} className=\"logo\" onClick={this.onClickLogo}/>\n                        <strong>개발자 DOS</strong>\n                    </EditorWrap>\n                </FooterWrap>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(BlogDetailView);","module.exports = __webpack_public_path__ + \"static/media/do.d412a098.svg\";","import { sec } from \"lib\";\nimport { AxiosResponse } from \"axios\";\nimport { Post, PostDTO } from \"@types\";\nimport { observable, action, computed } from \"mobx\";\n\nclass BlogRepo {\n    @observable private list: Post[] = [];\n    @observable private info: PostDTO = {\n        post: {\n            PostID: \"\",\n            Content: \"\",\n            SubTitle: \"\",\n            CreatedAt: new Date(),\n            MainTitle: \"\",\n            UpdatedAt: new Date()\n        },\n        tags: []\n    }\n\n    @action\n    public async srchList(param?: Post):Promise<void> {\n       const {data}: AxiosResponse<{list: Post[]}> = await sec.post(\"get/postlist\", {\"post\": param});\n       this.list = data.list;\n    }\n\n    public async srchPost(postID: string):Promise<PostDTO> {\n        const {data}:AxiosResponse<PostDTO> = await sec.post(\"get/post\", {\"post\": {\"PostID\": postID}});\n        this.info = {\n            post: data.post,\n            tags: data.tags\n        }\n        return data;\n    }\n\n    public async mngPost(param: PostDTO): Promise<void> {\n        await sec.post(\"mng/post\", {\"post\": param.post, \"tags\": param.tags});\n    }\n\n    public async delPost(postID: string): Promise<void> {\n        await sec.post(\"del/post\", {\"post\": {\"PostID\": postID}})\n    }\n\n    @computed\n    public get getList():Post[]{\n        return this.list;\n    }\n\n    @computed\n    public get getInfo():PostDTO {\n        return this.info;\n    }\n\n}\n\nexport default new BlogRepo();"],"sourceRoot":""}